#!/usr/bin/python2
from ase.io.vasp import read_vasp
from sys import argv
from sys import stdout
from optparse import OptionParser
import vasputil.supercell as vuscell
import numpy as np
import collections
from math import pi

usage = """%prog [options] CONTCAR"""


def findAdsorbateZ(struct):
    ztol=1.1;
    rtol=4;
    symbols=struct.get_chemical_symbols()
    coords=struct.get_positions()
    csort=np.argsort(coords[:,2])
    adsatoms=[]
    if symbols[csort[-1]]!='H':
        adsatoms.append(csort[-1])
    for i in range(10):
        idx=csort[-2-i]
        previdx=csort[-1-i]
        #stdout.write("%s z=%f dnext=%f\n"%(symbols[idx],coords[idx][2],struct.get_distance(idx,previdx)))
        if struct.get_distance(idx,previdx,mic=True)<rtol and abs(coords[previdx][2]-coords[idx][2])<ztol:
          if symbols[idx]=='H':
            continue #ignore H atoms
          adsatoms.append(idx)
        else:
            return adsatoms
    return adsatoms


filename=argv[1]

#Read the structure
struct=read_vasp(filename)


#Find our adsorbate
adsats=findAdsorbateZ(struct)
angle=struct.get_angle(adsats)
asyms=struct.get_chemical_symbols()
pb=0;
for atm in adsats:
    if (pb):
        stdout.write("-")
    stdout.write("%s"%(asyms[atm]))
    pb=1;
    
stdout.write(" angle: %f\n"%(angle*180/pi))